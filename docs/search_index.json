[
["index.html", "R로 배우는 기초통계 Chapter 1 Introduction 강의 개요 1.1 Goal 강의 목표 1.2 This course 1.3 Tips 1.4 References books 참고 교제 1.5 References 참고 자료 1.6 Evaluation 평가 세부 항목 1.7 Schedule 강의 계획 1.8 R Lecture Youtube Link", " R로 배우는 기초통계 한국생명공학연구원 김하성 2020-09-10 Chapter 1 Introduction 강의 개요 매주 목요일 강의노트, 동영상 업데이트 강사: 한국생명공학연구원 바이오합성연구센터 김하성 연락처: 042-860-4372, haseong [at] kribb.re.kr (생명연 연구동 1143) 강의조교: 박성군, tjdrns27 [at] kribb.re.kr 강의site: https://greendaygh.github.io/Rstat2020/ 1.1 Goal 강의 목표 이공계열 대학원생이 데이터 분석용 프로그래밍언어인 R을 기반으로 프로그래밍 기술과 함께 데이터를 분석하는 능력을 습득하고 이공계 연구에 필수인 통계적 사고의 기초를 배양함 1.2 This course 온라인 (강의자료, 동영상) 강의를 기본으로 함 기초 통계의 개념 설명과 R 실습 예시가 강의자료와 동영상 형식으로 제공됨 매 회 강의에는 해당 강의 내용과 관련된 과제가 주어지며 이메일을 통해 문제 풀이를 제출 받음 상황에 따라 강의 자료 및 동영상 업데이트 일정이 조정될 수 있음 1.3 Tips 눈으로 이해하지 않고 스스로 실습 필수 각 명령줄이 어떻게/왜 작동하는지 이해하기 인터넷 검색을 통한 다른사람의 코드 이해/적용 필요 1.4 References books 참고 교제 Using R for Introductory Statistics by John Verzani Free version of 1st Edition https://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf Second edition https://www.crcpress.com/Using-R-for-Introductory-Statistics-Second-Edition/Verzani/p/book/9781466590731 R for Data Science (https://r4ds.had.co.nz, https://github.com/hadley) Bioinformatics Data Skills by Vince Buffalo (http://2.droppdf.com/files/5aTvl/bioinformatics-data-skills.pdf) First Course in Statistical Programming with R by Braun and Murdoch (https://www.cambridge.org/core/books/first-course-in-statistical-programming-with-r/C9F088122AB40517B07FA77F2F0FDE2F) Introductory Statistics with R by Dalgaard (http://www.academia.dk/BiologiskAntropologi/Epidemiologi/PDF/Introductory_Statistics_with_R__2nd_ed.pdf) Modern Applied Statistics with S by Venables and Ripley (http://www.bagualu.net/wordpress/wp-content/uploads/2015/10/Modern_Applied_Statistics_With_S.pdf) 일반통계학 (영지문화사, 김우철 외) 1.5 References 참고 자료 https://resources.rstudio.com/ http://shiny.rstudio.com/tutorial/ R 홈페이지 https://www.r-project.org/ Rstudio 홈페이지 https://www.rstudio.com/ Packages for biologists https://www.bioconductor.org/ R 기본 문서들 (소개, 사용, 설치, 운영) https://cran.r-project.org/manuals.html R ebooks https://bookdown.org/ Cheat Sheets https://www.rstudio.com/resources/cheatsheets/ 1.6 Evaluation 평가 세부 항목 과제 100점 성적부여기준: 70점 이상 S, 70점 미만 U 부여 1.7 Schedule 강의 계획 1주차 - R basics / introduction of data 2주차 - Univariate data – Summary statistics 3주차 - Bivariate data – Correlation / Independence 4주차 - Multivariate data – R data structure 5주차 - Populations – Families of distributions 6주차 - Sampling – Distribution and CLT 7주차 - Statistical inference 8주차 - Confidence intervals 9주차 - Significance test - parameteric 10주차 - Significance test – non parametric 11주차 - Goodness of fit - parametric 12주차 - Goodness of fit – non parametirc 13주차 - Linear regression – basics &amp; simple LR 14주차 - Multiple linear regression 15주차 - Analysis of variance 16주차 - Logistic / Non-linear regression 1.8 R Lecture Youtube Link 1.8.1 Lecture Chapter 1 1-1 https://youtu.be/8KNbdcUnko8 1-2 https://youtu.be/6YLWwv3fhEI 1-3 https://youtu.be/Rd8MfVNK3AQ 1-4 https://youtu.be/I3REftNvPxI "],
["r-basics.html", "Chapter 2 R basics 2.1 What is R / Rstudio 2.2 R / Rstudio installation 2.3 Rstudio interface 2.4 Keyboard shortcuts 2.5 R programming basics and terminology 2.6 Set a working directory 2.7 R coding practice 2.8 Variables and values 2.9 Variable type of (storage) mode 2.10 Variable - Vectors 2.11 Functions 2.12 Vectorized functions 2.13 Help 2.14 R packages 2.15 Data sets 2.16 Cheatsheet 2.17 Problems", " Chapter 2 R basics 2.1 What is R / Rstudio R은 통계나 생물통계, 유전학을 연구하는 사람들 사이에서 널리 사용되는 오픈소스 프로그래밍 언어 입니다. Bell Lab에서 개발한 S 언어에서 유래했으며 엄청나게 많은 라이브러리 (다른 사람들이 만들어 놓은 코드)가 있어서 쉽게 가져다 사용할 수 있습니다. R은 복잡한 수식이나 통계 알고리즘을 간단히 구현하고 사용할 수 있으며 C, C++, Python 등 다른 언어들과의 병행 사용도 가능합니다. 2019년 top five language에 랭크 되었으며 이는 빅데이터 증가에 따라 인기가 높아진 것으로 볼 수 있습니다 (참고로 2018년에는 7위). Despite being a much more specialized language than the others, it’s maintained its popularity in recent years due to the world being awash in an ever-growing pile of big data. https://spectrum.ieee.org/computing/software/the-top-programming-languages-2019 R은 통계분석에 널리 사용되는데 이는 데이터 가시화를 위한 그래픽 기능이나 벡터 연산 등의 편리함 때문에 점점 더 많은 사람들이 사용하고 있습니다. 기존에는 느린 속도나 부족한 확장성이 다른 언어들에 비해 단점으로 지적되었으나 R 언어의 계속적인 개발과 업데이트로 이러한 단점들이 빠르게 극복되고 있습니다. R 사용을 위해서는 R 언어의 코어 프로그램을 먼저 설치하고 그 다음 R 언어용 IDE인 RStudio 설치가 필요합니다. 2.2 R / Rstudio installation 2.2.1 R 설치 R 사이트에 접속 후 (https://www.r-project.org/) 좌측 메뉴 상단에 위치한 CRAN 클릭. 미러 사이트 목록에서 Korea의 아무 사이트나 들어감 Download R for Windows를 클릭 후 base 링크 들어가서 Download R x.x.x for Windows 링크 클릭으로 실행 프로그램 다운로드 - 로컬 컴퓨터에 Download 된 R-x.x.x-win.exe 를 실행 설치 가이드에 따라 R 언어 소프트웨어 설치 완료 2.2.2 Rstudio 설치 Rstudio는 R 언어를 위한 오픈소스 기반 통합개발환경(IDE)으로 R 프로그래밍을 위한 편리한 기능들을 제공해 줍니다. 사이트에 접속 (https://www.rstudio.com/), 상단의 Products &gt; RStudio 클릭 RStudio Desktop 선택 Download RStudio Desktop 클릭 RStudio Desktop Free 버전의 Download를 선택하고 Download RStudio for Windows 클릭, 다운로드 로컬 컴퓨터에 다운로드된 RStudio-x.x.x.exe 실행 설치 가이드에 따라 설치 완료 2.3 Rstudio interface 좌측 상단의 공간은 코드편집창, 좌측 하단은 콘솔창 이며 각 위치를 기호에 따라서 바꿀 수 있습니다. 2.4 Keyboard shortcuts 참고사이트 https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts Tools –&gt; Keyboard shortcut Quick Reference (Alt + Shift + K) 코드편집창 이동 (Ctrl+1) 콘솔창 이동(Ctrl+2) 한 줄 실행 (Ctrl+Enter) 주석처리 (Ctrl + Shift + C) 또는 #으로 시작하는 라인 실습 코드편집창에서 다음 입력 단축키 Ctrl + enter로 코드 실행 단축키 Ctrl + 2로 커서 콘솔창으로 이동 x값 x+y값 확인 단축키 Ctrl + 1로 코드편집창 이동 단축키 Ctrl + Shift + C 사용 # x &lt;- 10 # y &lt;- 20 2.5 R programming basics and terminology Console: 명령어 입력하는 창 Code: R 프로그래밍 변수/제어문 모음 Objects (개체, variable): 값이 (데이터) 저장되는 장소 Data types: Integers, doubles/numerics, logicals, and characters. Object (Variable) types: Vectors: 값들의 모임 combine function c() EX: c(6, 11, 13, 31, 90, 92) Factors: 범주형 데이터 저장 장소 Data frames: 2D matrix 형태 데이터 저장 장소 Conditionals (조건, 제어): if: ==, &amp; (AND), | (OR) Ex: (2 + 1 == 3) &amp; (2 + 1 == 4) for, while: 반복 수 Functions (함수, commands): 특정 일 수행, 함수이름 - 입력값 (arguments) - 출력값 (output) 으로 구성 2.6 Set a working directory 시작 전 항상 작업 디렉토리 설정 예를 들어 c: 아래 새로운 디렉토리 rstat01 을 만들고 작업공간으로 설정 getwd() dir() setwd(&quot;C:\\\\rstat01&quot;) getwd() dir() RStudio &gt; Session &gt; Set Working Directory &gt; Choose Directory 2.7 R coding practice 콘솔 계산기 2 + 2 ((2 – 1)^2 + (1 – 3)^2 )^(1/2) 2 + 2; 2 - 2 이전 명령: 콘솔에서 위 아래 화살표 2.8 Variables and values 프로그래밍 언에어서 변수, 값 개념 Assignment operator ( &lt;- OR = ) Valid object name &lt;- value 단축키: Alt + - (the minus sign) x &lt;- 2 y &lt;- x^2 – 2*x + 1 y x &lt;- &quot;two&quot; some_data &lt;- 9.8 내장 변수 Built-in variables pi 변수이름 작명법 문자, 숫자, “_”, “.” 등으로 구성 대소문자 구분 가독성, 의미있는 변수 이름 길이 제한 없음 i_use_snake_case &lt;- 1 otherPeopleUseCamelCase &lt;- 2 some.people.use.periods &lt;- 3 And_aFew.People_RENOUNCEconvention &lt;- 4 자동 완성 기능 (Tab completion) in RStudio boxplot() 2.9 Variable type of (storage) mode 2.10 Variable - Vectors Combine function c(): Concatenating elements end to end x &lt;- c(10.4, 5.6, 3.1, 6.4, 21.7) y &lt;- c(&quot;X1&quot;, &quot;Y2&quot;, &quot;X3&quot;, &quot;Y4&quot;) 인덱싱: Subsets of the elements of a vector x[1] x[1:3] x[c(1,2,4)] y[3] 2.11 Functions Function 정의 my_sine &lt;- function(x){ y &lt;- sin(x) return(y) } 사용법 my_sine(pi) 용어 function name: my_sine parameter: x argument: pi return value: y log(100) ?log log(100, base=10) log(100, 10) R code 스니핏 fun 내장 함수 (Built-in functions) Tab completion x &lt;- pi sin(x) sqrt(x) log(x) log(x, 10) x &lt;- c(10, 20, 30) x + x mean(x) sum(x)/length(x) 2.12 Vectorized functions x &lt;- c(10, 20, 30) x + x sqrt(x) sin(x) log(x) x-mean(x) 2.13 Help R의 장점 중 하나 (예제 포함) ? ?mean help(&quot;mean&quot;) example(&quot;mean&quot;) help.search(&quot;mean&quot;) help(package=&quot;MASS&quot;) 2.14 R packages R 패키지는 함수들의 모음으로 다른 사람들이 만들어 놓은 함수를 가져와서 사용할 수 있음 예) sum() 은 “base” package에 있고 sd() 함수는 “stats” package에서 제공 패키지를 구할 수 있는 가장 대표적인 사이트 The Comprehensive R Archive Network (CRAN) - http://cran.r-project.org/web/views/ Bioconductor - http://www.bioconductor.org/packages/release/bioc/ UsingR package installation install.packages(&quot;UsingR&quot;) UsingR package loading library(UsingR) help(package=&quot;UsingR&quot;) R 설치 디렉토리 R 패키지 설치 디렉토리 .libPaths() path.package() 2.15 Data sets 일반적으로 패키지 안에 관련된 데이터도 같이 저장 data() function를 이용해서 패키지 데이터를 사용자 작업공간에 복사해서 사용 가능 head(rivers) length(rivers) class(rivers) data(rivers) data(package=&quot;UsingR&quot;) library(HistData) head(Cavendish) str(Cavendish) head(Cavendish$density2) 2.16 Cheatsheet https://rstudio.com/resources/cheatsheets/ 2.17 Problems 과제는 새로운 R 파일을 생성 후 코드를 작성하고 영문이름-학번-날짜.R 이름으로 저장하여 조교에게 이메일로 제출 1.1 다음 공식들을 계산하는 R 코드를 작성하시오 \\[ \\sqrt{(4+3)(2+1)} \\\\ 2^3 + 3^2 \\\\ \\frac{0.25 - 0.2}{\\sqrt{0.2 (1-0.2)/100}} \\] 1.2 변수 x에 1, 3, 5, 7, 9를 저장하는 코드를 작성하시오 1.3 변수 y에 2, 4, 6, 8, 10을 저장하는 코드를 작성하시오 1.4 위 변수 x와 y를 더한 값을 z에 저장하는 코드를 작성하시오 (백터연산) 1.5 z의 원소들의 합을 구하시오 (sum()함수 활용) 1.6 두 값을 입력받아 합을 출력하는 mysum 이름의 함수를 만들고 이 함수를 다음과 같이 이용해서 15와 20 두 값의 합을 구하는 코드를 작성하시오 (참고로 직접 만든 함수를 사용하기 위해서는 사용하기 전 해당 함수를 workspace에 등록하는 과정이 필요함) z = mysum(15, 20) cat(z) 이 저작물은 크리에이티브 커먼즈 저작자표시-비영리-변경금지 4.0 국제 라이선스에 따라 이용할 수 있습니다. "],
["univariat-data.html", "Chapter 3 Univariat data 3.1 Introduction 2 3.2 Data vectors 3.3 Data type 3.4 Functions 2 3.5 Miscellaneous 1 3.6 Numeric summaries 3.7 Center for a univariat variable 3.8 Spread for a univariat variable 3.9 Problems 02", " Chapter 3 Univariat data 3.1 Introduction 2 Statistics: 데이터 분석을 통한 예측. 즉, 데이터를 수집, 정리하여 이로부터 미지의 사실에 대한 신빙성 있는 추론을 수행하는 과정 Data - 사실을 나타내는 수치 맥도너 정보경제학 (1963) 지혜 (wisdom) : 패턴화된 지식 지식 (knowledge) : 가치있는 정보 정보 (information) : 의미있는 데이터 데이터 (data) : 단순한 사실의 나열 Univariate (단변량): Single variable \\[ x_1, x_2, ..., x_n \\] library(UsingR) exec.pay ?exec.pay 데이터의 속성에 따른 구분 범주형 - 질적 데이터, 숫자로 나타낼 수 있으나 의미 없음 명목형 (Nominal) - 사람 이름 순서형 (Ordinal) – 달리기 도착 순서 수치형 - 숫자로 나타내며 데이터 속성을 그대로 지님님 구간형 (Interval) – 선수1, 선수2 종점통과 시간 비율형 (Ratio) – 출발시간 기준 종점 통과 시간 Data type in R Numeric data types (수치형) Discrete (이산형) data - 카운트, 횟수 Continuous (연속형) data - 키, 몸무게, Cannot be shared Factors data - Categories to group the data (범주형) Character data - Identifiers (범주형) Date and time (수치형) 3.2 Data vectors Using combine function #The number of whale beachings in Texas during the 1990s whale &lt;- c(74, 122, 235, 111, 292, 111, 211, 133, 156, 79) #Object `whale` is a data vector == (univariate) data set # The size length(whale) sum(whale) sum(whale)/length(whale) mean(whale) Vectorization whale - mean(whale) whale^2 - mean(whale) sqrt(whale) Adding values to a vector variable x &lt;- 1 x &lt;- c(x, 2) x x &lt;- c(x, 3, 3, 3, 4) x Missing/NULL values NA: Not available, The value is missing NULL: a reserved value NaN: Not a number (0/0) Inf: (1/0) hip_cost &lt;- c(10500, 45000, 74100, NA, 83500) sum(hip_cost) sum(hip_cost, na.rm=TRUE) ?sum Attributes: names in data vectors head(precip) class(precip) length(precip) names(precip) order(names(precip)) test_scores &lt;- c(100, 90, 80) names(test_scores) &lt;- c(&quot;Alice&quot;, &quot;Bob&quot;, &quot;Shirley&quot;) Indexing head(precip) precip[1] precip[2:10] precip[c(1,3,5)] precip[-1] precip[&quot;Seattle Tacoma&quot;] precip[c(&quot;Seattle Tacoma&quot;, &quot;Portland&quot;)] precip[2] &lt;- 10 Functions for generating structured data 1:5 seq(1,5, by=1) seq(0, 100, by=10) seq(0, 100, length.out=11) ?seq rep(5, times10) rep(1:3, times=4) 3.3 Data type Numeric data class(1) class(pi) class(seq(1,5,by=1)) Character data ch &lt;- c(&quot;Lincoln&quot;, &quot;said&quot;, &quot;and&quot;) class(ch) Combining strings - paste function paste(&quot;X&quot;, 1:10) paste(&quot;X&quot;, 1:10, sep=&quot;&quot;) paste(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;) paste(c(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;)) paste(c(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;), collapse=&quot; &quot;) x &lt;- 1:10 paste(x) paste(x, collapse=&quot;:&quot;) Factors x &lt;- c(&quot;Red&quot;, &quot;Blue&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Green&quot;) y &lt;- factor(x) y Adding a level levels(y) y[1] &lt;- &quot;Gold&quot; y levels(y) &lt;- c(levels(y), &quot;Gold&quot;) levels(y) y y[1] &lt;- &quot;Gold&quot; y Logical data TRUE and FALSE “is” functions Comparison by &lt;, &lt;=, ==, !=, &gt;=, &gt; Combination by !, &amp;, | is.na(1) is.numeric(1) is.logical(TRUE) pi &lt; 3 precip &lt; 30 which(precip &lt; 30) any(precip &lt; 30) all(precip &lt; 30) any(39 == precip) which(39 == precip) sum(precip &lt; 30) sum(c(TRUE, TRUE)) x &lt;- 1:100 x &lt; 10 x &gt; 90 x &lt; 10 | x &gt;90 which(x &lt; 10 | x &gt;90) i &lt;- which(x &lt; 10 | x &gt;90) x[i] x[x &lt; 10 | x &gt;90] Date and time Unixtime, POSIX time 1970년 1월 1일 00:00:00 협정 세계시(UTC) 부터의 경과 시간을 초로 환산 32비트로 표현된 유닉스 시간은 1970년 1월 1일 00:00 (UTC)에서 2,147,483,647 (231 - 1) 지난 후인 2038년 1월 19일 03:14:08 UTC에 2038년 문제를 발생시킨다. 이는 산술 오버플로와 관련 있는 문제이다. –wiki- library(lubridate) current_time &lt;- now() # record since 1970 as.numeric(current_time) as.numeric(now()) month(current_time) 3.4 Functions 2 Define a function my_mean &lt;- function(x){ total &lt;- sum(x) n &lt;- length(x) return(total/n) } Write a function named get_dist and use it for the rivers data get_dist &lt;- function(x){ return() } 3.5 Miscellaneous 1 랜덤 문자열 만들기 LETTERS x &lt;- sample(LETTERS, 10) x_paste &lt;- paste(x, collapse=&quot;&quot;) random_string_generator &lt;- function(n){ x &lt;- sample(LETTERS, n) x_paste &lt;- paste(x, collapse=&quot;&quot;) return(x_paste) } random_string_generator(20) random_strings &lt;- replicate(10, random_string_generator(5)) 특정 문자로 시작하는 데이터 뽑기 i &lt;- grep(&quot;^D&quot;, random_strings) random_strings[i] i &lt;- grep(&quot;D$&quot;, random_strings) random_strings[i] 3.6 Numeric summaries 대푯값 (요약값) Center – commonly known as “average” or “mean” but not the only one. median, mode, etc Spread – Variability of a data set. No variability – mean is everything Large variability – mean informs much less confidence of interpretation from knowing center Distance from center Shape – Degree of interpretation from knowing center and spread. eg. bell shape – two sides are equally likely, large values are rather unlikely and values tend to cluster near the center. 3.7 Center for a univariat variable 3.7.1 Sample mean \\[ \\bar{x} = \\frac{1}{n} (x_1 + x_2 + ... + x_n) = \\frac{1}{n}\\sum_i{x_i} \\] head(kid.weights) str(kid.weights) wts &lt;- kid.weights$weight length(wts) plot(wts) mean(wts) devs &lt;- wts – mean(wts) # deviation, centering plot(wts) mean(wts) Trimmed mean mean(wts) wts[wts&lt;120] mean(wts[wts&lt;=120]) mean(wts, trim=0.8) 3.7.2 Measure of Position _p_th Quantile - 특정 값으로 이 값보다 작은 데이터의 비율이 100∙p 퍼센트, 큰 데이터의 비율은 100∙(1- p) 퍼센트 Median - Splits the data in half p=0.5 Percentiles - The same as quantile but its scale is 0 to 100 x &lt;- 0:5 length(x) quantile(x, 0.25) median(x) quantile(x, seq(0, 1, by=0.2)) quantile(x) Robustness mean(wts) median(wts) plot(wts) abline(h=mean(wts), col=&quot;red&quot;) abline(h=median(wts), col=&quot;blue&quot;) wts2 &lt;- wts[wts&lt;120] abline(h=mean(wts2), col=&quot;red&quot;, lty=2) abline(h=median(wts2), col=&quot;blue&quot;, lty=2) Boxplot x &lt;- 0:5 quantile(x) boxplot(x) text(x=1.3, y=quantile(x, 0.25), labels = &quot;1사분위수&quot;) text(x=1.3, y=quantile(x, 0.5), labels = &quot;2사분위수&quot;) text(x=1.3, y=quantile(x, 0.75), labels = &quot;3사분위수&quot;) 3.8 Spread for a univariat variable Range - the distance between the smallest and largest values Sample variance Distance - \\[ d_i = x_i - \\bar{x} \\] \\[\\begin{equation} s^2 = \\frac{1}{n-1}\\sum_i(x_i - \\bar{x})^2 \\end{equation}\\] Sample standard deviation 측정값들이 평균에서 떨어진 정도 \\[\\begin{equation} \\sqrt{s^2} = \\sqrt{ \\frac{1}{n-1}\\sum_i(x_i - \\bar{x})^2 } \\end{equation}\\] wts &lt;- kid.weights$weight var(wts) sd(wts) plot(wts) boxplot(wts) hist(wts) hist(wts, breaks = 50) hist(wts, 50) abline(v=mean(wts), col=&quot;red&quot;) z-score How big (small) is the value relative to the others \\(z=3\\) 이 값은 평균에 비해 3 표준편차만큼 크다 \\[\\begin{equation} z_i = \\frac{x_i - \\bar{x}}{s} \\end{equation}\\] Example - z score wts의 z 값을 구하는 함수를 만들고 histogram을 그리시오 wts &lt;- kid.weights$weight Interquartile range (IQR) Middle 50% of the data Difference between Q3 and Q1 3.9 Problems 02 seq 또는 rep 함수를 사용해서 다음 서열들을 만들고 x 변수에 저장하시오 1-1) “a”, “a”, “a”, “a”, “a” 1-2) 1, 3, 5, 7, …, 99 1-3) 1, 1, 1, 2, 2, 2, 3, 3, 3 1-4) 1, 2, 3, 4, 5, 4, 3, 2, 1 Recording values 다음은 신생아들의 키를 나타내는 data set 이다. 오류 값을 찾아내고 이들 값을 NA로 바꾼 후 평균 값을 구하시오 (babies 데이터셋은 UsingR 패키지에 있으며 오류값은 999 입니다) x &lt;- babies$dwt x precip 데이터는 미국 도시들의 연간 평균 강수량을 저장한 데이터이다. precip에서 “J”로 시작하는 도시이름을 찾고 해당 도시들의 평균 강수량을 구하시오 위 강수량 데이터 precip에서 연평균 강수량이 50 이상인 도시를 뽑고 해당 도시들의 강수량에 따라서 순서대로 나열하시오 특정 숫자가 짝수인지를 검사하는 방법은 해당 숫자를 2로 나누어 나머지가 0인지 확인하는 방법이다. 2 %% 2 == 0 위와 같은 코드로 이를 구현할 수 있다. 다음 변수의 값들 중 짝수의 개수를 구하는 코드를 작성하시오 (1줄 코드임). x &lt;- c(12, 3, 4, 2, 28, 11, 8, 9, 51, 89) bumpers 데이터셋은 (UsingR 패키지) 자동차 범퍼를 교환하는데 필요한 비용을 나타낸다. 평균과 중간값, 표준편차를 구하고 교체 비용이 가장 비싼 차와 가장 싼 차가 어떤 차들인지 찾으시오. 다음 wts 변수 값들의 center를 나타내는 평균, 중간값과 spread를 나타내는 분산, 표준편차, IQR 을 구하시오 wts &lt;- kid.weights$weight "]
]
